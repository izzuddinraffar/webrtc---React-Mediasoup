[{"/home/izzud/Desktop/app/webrtc_mediasoup/src/reportWebVitals.js":"1","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/home/index.tsx":"2","/home/izzud/Desktop/app/webrtc_mediasoup/src/index.js":"3","/home/izzud/Desktop/app/webrtc_mediasoup/src/App.js":"4","/home/izzud/Desktop/app/webrtc_mediasoup/src/CONTAINER/layout.tsx":"5","/home/izzud/Desktop/app/webrtc_mediasoup/src/app.config.js":"6","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-broadcast/subscribe.tsx":"7","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-broadcast/index.tsx":"8","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-conference/room.tsx":"9","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-broadcast/publish.tsx":"10","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-conference/index.tsx":"11"},{"size":362,"mtime":1607107118941,"results":"12","hashOfConfig":"13"},{"size":1038,"mtime":1607332813616,"results":"14","hashOfConfig":"13"},{"size":613,"mtime":1607260661652,"results":"15","hashOfConfig":"13"},{"size":975,"mtime":1607343259034,"results":"16","hashOfConfig":"13"},{"size":414,"mtime":1607269297240,"results":"17","hashOfConfig":"13"},{"size":102,"mtime":1607269821171,"results":"18","hashOfConfig":"13"},{"size":12630,"mtime":1611659416969,"results":"19","hashOfConfig":"13"},{"size":762,"mtime":1611614138023,"results":"20","hashOfConfig":"13"},{"size":34921,"mtime":1611855123071,"results":"21","hashOfConfig":"13"},{"size":11179,"mtime":1611615065563,"results":"22","hashOfConfig":"13"},{"size":494,"mtime":1611601395758,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nd4583",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/izzud/Desktop/app/webrtc_mediasoup/src/reportWebVitals.js",[],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/home/index.tsx",[],["50","51"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/index.js",[],"/home/izzud/Desktop/app/webrtc_mediasoup/src/App.js",["52","53","54"],"import React, { Suspense } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { io as socketIOClient } from 'socket.io-client';\nimport './App.css';\n\nconst Home = React.lazy(() => import('./PAGE/home/index'));\nconst Broadcast = React.lazy(() => import('./PAGE/video-broadcast/index'));\nconst Conference = React.lazy(() => import('./PAGE/video-conference/index'));\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Switch>\n                <Suspense fallback={<div>Loading...</div>}>\n                    <Route path='/' exact component={Home} />\n                    <Route\n                        path='/broadcast/:view'\n                        exact\n                        component={Broadcast}\n                    />\n                    <Route path='/conference' exact component={Conference} />\n                </Suspense>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n",["55","56"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/CONTAINER/layout.tsx",["57","58","59"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/app.config.js",[],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-broadcast/subscribe.tsx",["60","61","62","63","64","65"],"import React, { Suspense, lazy } from 'react';\nimport { Device } from 'mediasoup-client';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\nfunction Subscribe(props: any) {\n    const remoteVideo: any = React.useRef();\n    const localStream: any = React.useRef();\n    const clientId: any = React.useRef();\n    const device: any = React.useRef();\n    const consumerTransport: any = React.useRef();\n    const videoConsumer: any = React.useRef();\n    const audioConsumer: any = React.useRef();\n    const socketRef: any = React.useRef();\n\n    const [isSubscribed, setIsSubscribed] = React.useState(false);\n\n    const [isConnected, setIsConnected] = React.useState(false);\n\n    // return Promise\n    function playVideo(element: any, stream: any) {\n        if (element.srcObject) {\n            console.warn('element ALREADY playing, so ignore');\n            return;\n        }\n        element.srcObject = stream;\n        element.volume = 0;\n        remoteVideo.current = element;\n        console.log('playVideo');\n        console.log(remoteVideo);\n        return element.play();\n    }\n\n    function pauseVideo(element: any) {\n        element.pause();\n        element.srcObject = null;\n    }\n\n    function addRemoteTrack(id: any, track: any) {\n        let video: any = remoteVideo.current;\n\n        if (video.srcObject) {\n            video.srcObject.addTrack(track);\n            return;\n        }\n\n        const newStream = new MediaStream();\n        newStream.addTrack(track);\n        playVideo(video, newStream)\n            .then(() => {\n                video.volume = 1.0;\n            })\n            .catch((err: any) => {\n                console.error('media ERROR:', err);\n            });\n    }\n\n    // ============ UI button ==========\n\n    async function handleSubscribe() {\n        //if (!socketRef.current) {\n        await connectSocket().catch((err: any) => {\n            console.error(err);\n            return;\n        });\n        // }\n\n        // --- get capabilities --\n        const data = await sendRequest('getRouterRtpCapabilities', {});\n        console.log('getRouterRtpCapabilities:', data);\n        await loadDevice(data);\n        // }\n\n        // --- prepare transport ---\n        console.log('--- createConsumerTransport --');\n        const params = await sendRequest('createConsumerTransport', {});\n        console.log('transport params:', params);\n        consumerTransport.current = device.current.createRecvTransport(params);\n        console.log('createConsumerTransport:', consumerTransport);\n\n        // --- NG ---\n        //sendRequest('connectConsumerTransport', { dtlsParameters: dtlsParameters })\n        //  .then(callback)\n        //  .catch(errback);\n\n        // --- try --- not well\n        //sendRequest('connectConsumerTransport', { dtlsParameters: params.dtlsParameters })\n        //  .then(() => console.log('connectConsumerTransport OK'))\n        //  .catch(err => console.error('connectConsumerTransport ERROR:', err));\n\n        // --- join & start publish --\n        consumerTransport.current.on(\n            'connect',\n            async ({ dtlsParameters }: any, callback: any, errback: any) => {\n                console.log('--consumer trasnport connect');\n                sendRequest('connectConsumerTransport', {\n                    dtlsParameters: dtlsParameters,\n                })\n                    .then(callback)\n                    .catch(errback);\n\n                //consumer = await consumeAndResume(consumerTransport);\n            }\n        );\n\n        consumerTransport.current.on('connectionstatechange', (state: any) => {\n            switch (state) {\n                case 'connecting':\n                    console.log('subscribing...');\n                    break;\n\n                case 'connected':\n                    console.log('subscribed');\n                    setIsSubscribed(true);\n                    break;\n\n                case 'failed':\n                    console.log('failed');\n                    consumerTransport.current.close();\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        videoConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'video'\n        );\n        audioConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'audio'\n        );\n    }\n\n    async function consumeAndResume(transport: any, kind: any) {\n        const consumer = await consume(transport, kind);\n        if (consumer) {\n            console.log('-- track exist, consumer ready. kind=' + kind);\n\n            if (kind === 'video') {\n                console.log('-- resume kind=' + kind);\n                sendRequest('resume', { kind: kind })\n                    .then(() => {\n                        console.log('resume OK');\n                        return consumer;\n                    })\n                    .catch((err) => {\n                        console.error('resume ERROR:', err);\n                        return consumer;\n                    });\n            } else {\n                console.log('-- do not resume kind=' + kind);\n            }\n        } else {\n            console.log('-- no consumer yet. kind=' + kind);\n            return null;\n        }\n    }\n\n    function handleDisconnect() {\n        if (videoConsumer.current) {\n            videoConsumer.current.close();\n            videoConsumer.current = null;\n        }\n        if (audioConsumer.current) {\n            audioConsumer.current.close();\n            audioConsumer.current = null;\n        }\n        if (consumerTransport.current) {\n            consumerTransport.current.close();\n            consumerTransport.current = null;\n        }\n\n        removeAllRemoteVideo();\n\n        disconnectSocket();\n        setIsSubscribed(false);\n    }\n\n    async function loadDevice(routerRtpCapabilities: any) {\n        try {\n            device.current = new Device();\n        } catch (error) {\n            if (error.name === 'UnsupportedError') {\n                console.error('browser not supported');\n            }\n        }\n        await device.current.load({ routerRtpCapabilities });\n    }\n\n    async function consume(transport: any, trackKind: any) {\n        console.log('--start of consume --kind=' + trackKind);\n        const { rtpCapabilities } = device.current;\n        //const data = await socket.request('consume', { rtpCapabilities });\n        const data = await sendRequest('consume', {\n            rtpCapabilities: rtpCapabilities,\n            kind: trackKind,\n        }).catch((err) => {\n            console.error('consume ERROR:', err);\n        });\n        const { producerId, id, kind, rtpParameters }: any = data;\n\n        if (producerId) {\n            let codecOptions = {};\n            const consumer = await transport.consume({\n                id,\n                producerId,\n                kind,\n                rtpParameters,\n                codecOptions,\n            });\n            //const stream = new MediaStream();\n            //stream.addTrack(consumer.track);\n\n            addRemoteTrack(clientId.current, consumer.track);\n\n            console.log('--end of consume');\n            //return stream;\n\n            return consumer;\n        } else {\n            console.warn('--- remote producer NOT READY');\n\n            return null;\n        }\n    }\n\n    function sendRequest(type: any, data: any) {\n        return new Promise((resolve: any, reject: any) => {\n            socketRef.current.emit(type, data, (err: any, response: any) => {\n                if (!err) {\n                    // Success response, so pass the mediasoup response to the local Room.\n                    resolve(response);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    function disconnectSocket() {\n        if (socketRef.current) {\n            socketRef.current.close();\n            socketRef.current = null;\n            clientId.current = null;\n            console.log('socket.io closed..');\n        }\n    }\n\n    const connectSocket: any = () => {\n        if (socketRef.current == null) {\n            const io: any = socketIOClient(\n                config.SERVER_ENDPOINT + '/video-broadcast'\n            );\n            socketRef.current = io;\n        }\n\n        return new Promise((resolve: any, reject: any) => {\n            const socket = socketRef.current;\n            socket.on('connect', function (evt: any) {\n                console.log('socket.io connected()');\n            });\n            socket.on('error', function (err: any) {\n                console.error('socket.io ERROR:', err);\n                reject(err);\n            });\n            socket.on('message', function (message: any) {\n                console.log('socket.io message:', message);\n                if (message.type === 'welcome') {\n                    if (socket.id !== message.id) {\n                        console.warn(\n                            'WARN: something wrong with clientID',\n                            socket.io,\n                            message.id\n                        );\n                    }\n\n                    clientId.current = message.id;\n                    console.log(\n                        'connected to server. clientId=' + clientId.current\n                    );\n                    resolve();\n                } else {\n                    console.error('UNKNOWN message from server:', message);\n                }\n            });\n            socket.on('newProducer', async function (message: any) {\n                console.log('socket.io newProducer:', message);\n                if (consumerTransport.current) {\n                    // start consume\n                    if (message.kind === 'video') {\n                        videoConsumer.current = await consumeAndResume(\n                            consumerTransport.current,\n                            message.kind\n                        );\n                    } else if (message.kind === 'audio') {\n                        audioConsumer.current = await consumeAndResume(\n                            consumerTransport.current,\n                            message.kind\n                        );\n                    }\n                }\n            });\n\n            socket.on('producerClosed', function (message: any) {\n                console.log('socket.io producerClosed:', message);\n                const localId = message.localId;\n                const remoteId = message.remoteId;\n                const kind = message.kind;\n                console.log(\n                    '--try removeConsumer remoteId=' +\n                        remoteId +\n                        ', localId=' +\n                        localId +\n                        ', kind=' +\n                        kind\n                );\n                if (kind === 'video') {\n                    if (videoConsumer.current) {\n                        videoConsumer.current.close();\n                        videoConsumer.current = null;\n                    }\n                } else if (kind === 'audio') {\n                    if (audioConsumer.current) {\n                        audioConsumer.current.close();\n                        audioConsumer.current = null;\n                    }\n                }\n\n                if (remoteId) {\n                    removeRemoteVideo(remoteId);\n                } else {\n                    removeAllRemoteVideo();\n                }\n            });\n        });\n    };\n\n    function removeRemoteVideo(id: any) {\n        console.log(' ---- removeRemoteVideo() id=' + id);\n    }\n\n    function removeAllRemoteVideo() {\n        // remoteVideo.current = null;\n        if (remoteVideo.current) {\n            remoteVideo.current.pause();\n            remoteVideo.current.srcObject = null;\n        }\n    }\n\n    return (\n        <div>\n            <button disabled={isSubscribed} onClick={handleSubscribe}>\n                Subscribe\n            </button>\n            <button disabled={!isSubscribed} onClick={handleDisconnect}>\n                Disconnect\n            </button>\n\n            <div>\n                remote video\n                <br />\n                <div>\n                    <video\n                        ref={remoteVideo}\n                        autoPlay\n                        style={{\n                            width: '240px',\n                            height: '180px',\n                            border: '1px solid black',\n                        }}\n                    ></video>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Subscribe;\n","/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-broadcast/index.tsx",["66","67"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-conference/room.tsx",["68","69","70","71","72","73","74","75","76","77","78","79"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-broadcast/publish.tsx",["80","81"],"/home/izzud/Desktop/app/webrtc_mediasoup/src/PAGE/video-conference/index.tsx",["82","83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":12},{"ruleId":"89","severity":1,"message":"93","line":3,"column":25,"nodeType":"91","messageId":"92","endLine":3,"endColumn":33},{"ruleId":"89","severity":1,"message":"94","line":4,"column":16,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":23},{"ruleId":"95","severity":1,"message":"97","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":29},{"ruleId":"95","severity":1,"message":"98","line":8,"column":15,"nodeType":"91","messageId":"92","endLine":8,"endColumn":30},{"ruleId":"95","severity":1,"message":"99","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":31},{"ruleId":"95","severity":1,"message":"101","line":7,"column":11,"nodeType":"91","messageId":"92","endLine":7,"endColumn":27},{"ruleId":"95","severity":1,"message":"102","line":17,"column":12,"nodeType":"91","messageId":"92","endLine":17,"endColumn":23},{"ruleId":"95","severity":1,"message":"103","line":17,"column":25,"nodeType":"91","messageId":"92","endLine":17,"endColumn":39},{"ruleId":"95","severity":1,"message":"104","line":33,"column":14,"nodeType":"91","messageId":"92","endLine":33,"endColumn":24},{"ruleId":"95","severity":1,"message":"94","line":4,"column":16,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"95","severity":1,"message":"105","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":22,"column":8,"nodeType":"108","endLine":22,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":259,"column":9,"nodeType":"112","messageId":"113","endLine":265,"endColumn":10},{"ruleId":"110","severity":1,"message":"111","line":266,"column":9,"nodeType":"112","messageId":"113","endLine":272,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":356,"column":41,"nodeType":"116","messageId":"117","endLine":356,"endColumn":43},{"ruleId":"95","severity":1,"message":"118","line":365,"column":19,"nodeType":"91","messageId":"92","endLine":365,"endColumn":32},{"ruleId":"95","severity":1,"message":"119","line":392,"column":14,"nodeType":"91","messageId":"92","endLine":392,"endColumn":28},{"ruleId":"95","severity":1,"message":"120","line":767,"column":13,"nodeType":"91","messageId":"92","endLine":767,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":787,"column":18,"nodeType":"116","messageId":"117","endLine":787,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":822,"column":44,"nodeType":"116","messageId":"117","endLine":822,"endColumn":46},{"ruleId":"114","severity":1,"message":"115","line":831,"column":44,"nodeType":"116","messageId":"117","endLine":831,"endColumn":46},{"ruleId":"95","severity":1,"message":"99","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":31},{"ruleId":"95","severity":1,"message":"94","line":4,"column":16,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"95","severity":1,"message":"105","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":16},{"ruleId":"95","severity":1,"message":"121","line":12,"column":11,"nodeType":"91","messageId":"92","endLine":12,"endColumn":15},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'socketIOClient' is defined but never used.","@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","'isPropertySignature' is defined but never used.","'userSocket' is assigned a value but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","'localStream' is assigned a value but never used.","'isConnected' is assigned a value but never used.","'setIsConnected' is assigned a value but never used.","'pauseVideo' is defined but never used.","'config' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newPeers' is assigned a value but never used.","'addRemoteVideo' is defined but never used.","'audioIdsCount' is assigned a value but never used.","'view' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [props]",{"range":"127","text":"128"},[818,820],"[props]"]