{"version":3,"sources":["app.config.js","CONTAINER/layout.tsx","PAGE/video-broadcast/subscribe.tsx","PAGE/video-broadcast/publish.tsx","PAGE/video-broadcast/index.tsx"],"names":["config","SERVER_ENDPOINT","APP_ENDPOINT","Layout","props","React","useEffect","socketIOClient","className","children","Subscribe","remoteVideo","useRef","clientId","device","consumerTransport","videoConsumer","audioConsumer","socketRef","useState","isSubscribed","setIsSubscribed","addRemoteTrack","id","track","video","current","srcObject","addTrack","newStream","MediaStream","element","stream","volume","console","log","play","warn","playVideo","then","catch","err","error","a","connectSocket","sendRequest","data","loadDevice","params","createRecvTransport","on","callback","errback","dtlsParameters","state","close","consumeAndResume","transport","kind","consume","consumer","routerRtpCapabilities","Device","name","load","trackKind","rtpCapabilities","producerId","rtpParameters","codecOptions","type","Promise","resolve","reject","emit","response","io","socket","evt","message","localId","remoteId","removeAllRemoteVideo","pause","disabled","onClick","ref","autoPlay","style","width","height","border","Publish","localVideo","localStream","producerTransport","videoProducer","audioProducer","useVideo","setUseVideo","useAudio","setUseAudio","isStartMedia","setIsStartMedia","isPublished","setIsPublished","pauseVideo","stopLocalStream","tracks","getTracks","forEach","stop","createSendTransport","transportId","videoTrack","getVideoTracks","trackParams","produce","audioTrack","getAudioTracks","onChange","e","checked","navigator","mediaDevices","getUserMedia","audio","Home","view","match"],"mappings":"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","file":"static/js/5.ba8a3b80.chunk.js","sourcesContent":["export const config = {\n    SERVER_ENDPOINT: 'localhost:5005',\n    APP_ENDPOINT: 'localhost:5001',\n};\n","import React, { useRef } from 'react';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { isPropertySignature } from 'typescript';\nimport { config } from '../app.config';\n\nfunction Layout(props: any) {\n    React.useEffect(() => {\n        const userSocket: any = socketIOClient(config.SERVER_ENDPOINT);\n    }, []);\n    return <div className='Layout'>{props.children}</div>;\n}\n\nexport default Layout;\n","import React, { Suspense, lazy } from 'react';\nimport { Device } from 'mediasoup-client';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\nfunction Subscribe(props: any) {\n    const remoteVideo: any = React.useRef();\n    const localStream: any = React.useRef();\n    const clientId: any = React.useRef();\n    const device: any = React.useRef();\n    const consumerTransport: any = React.useRef();\n    const videoConsumer: any = React.useRef();\n    const audioConsumer: any = React.useRef();\n    const socketRef: any = React.useRef();\n\n    const [isSubscribed, setIsSubscribed] = React.useState(false);\n\n    const [isConnected, setIsConnected] = React.useState(false);\n\n    // return Promise\n    function playVideo(element: any, stream: any) {\n        if (element.srcObject) {\n            console.warn('element ALREADY playing, so ignore');\n            return;\n        }\n        element.srcObject = stream;\n        element.volume = 0;\n        remoteVideo.current = element;\n        console.log('playVideo');\n        console.log(remoteVideo);\n        return element.play();\n    }\n\n    function pauseVideo(element: any) {\n        element.pause();\n        element.srcObject = null;\n    }\n\n    function addRemoteTrack(id: any, track: any) {\n        let video: any = remoteVideo.current;\n\n        if (video.srcObject) {\n            video.srcObject.addTrack(track);\n            return;\n        }\n\n        const newStream = new MediaStream();\n        newStream.addTrack(track);\n        playVideo(video, newStream)\n            .then(() => {\n                video.volume = 1.0;\n            })\n            .catch((err: any) => {\n                console.error('media ERROR:', err);\n            });\n    }\n\n    // ============ UI button ==========\n\n    async function handleSubscribe() {\n        //if (!socketRef.current) {\n        await connectSocket().catch((err: any) => {\n            console.error(err);\n            return;\n        });\n        // }\n\n        // --- get capabilities --\n        const data = await sendRequest('getRouterRtpCapabilities', {});\n        console.log('getRouterRtpCapabilities:', data);\n        await loadDevice(data);\n        // }\n\n        // --- prepare transport ---\n        console.log('--- createConsumerTransport --');\n        const params = await sendRequest('createConsumerTransport', {});\n        console.log('transport params:', params);\n        consumerTransport.current = device.current.createRecvTransport(params);\n        console.log('createConsumerTransport:', consumerTransport);\n\n        // --- NG ---\n        //sendRequest('connectConsumerTransport', { dtlsParameters: dtlsParameters })\n        //  .then(callback)\n        //  .catch(errback);\n\n        // --- try --- not well\n        //sendRequest('connectConsumerTransport', { dtlsParameters: params.dtlsParameters })\n        //  .then(() => console.log('connectConsumerTransport OK'))\n        //  .catch(err => console.error('connectConsumerTransport ERROR:', err));\n\n        // --- join & start publish --\n        consumerTransport.current.on(\n            'connect',\n            async ({ dtlsParameters }: any, callback: any, errback: any) => {\n                console.log('--consumer trasnport connect');\n                sendRequest('connectConsumerTransport', {\n                    dtlsParameters: dtlsParameters,\n                })\n                    .then(callback)\n                    .catch(errback);\n\n                //consumer = await consumeAndResume(consumerTransport);\n            }\n        );\n\n        consumerTransport.current.on('connectionstatechange', (state: any) => {\n            switch (state) {\n                case 'connecting':\n                    console.log('subscribing...');\n                    break;\n\n                case 'connected':\n                    console.log('subscribed');\n                    setIsSubscribed(true);\n                    break;\n\n                case 'failed':\n                    console.log('failed');\n                    consumerTransport.current.close();\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        videoConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'video'\n        );\n        audioConsumer.current = await consumeAndResume(\n            consumerTransport.current,\n            'audio'\n        );\n    }\n\n    async function consumeAndResume(transport: any, kind: any) {\n        const consumer = await consume(transport, kind);\n        if (consumer) {\n            console.log('-- track exist, consumer ready. kind=' + kind);\n\n            if (kind === 'video') {\n                console.log('-- resume kind=' + kind);\n                sendRequest('resume', { kind: kind })\n                    .then(() => {\n                        console.log('resume OK');\n                        return consumer;\n                    })\n                    .catch((err) => {\n                        console.error('resume ERROR:', err);\n                        return consumer;\n                    });\n            } else {\n                console.log('-- do not resume kind=' + kind);\n            }\n        } else {\n            console.log('-- no consumer yet. kind=' + kind);\n            return null;\n        }\n    }\n\n    function handleDisconnect() {\n        if (videoConsumer.current) {\n            videoConsumer.current.close();\n            videoConsumer.current = null;\n        }\n        if (audioConsumer.current) {\n            audioConsumer.current.close();\n            audioConsumer.current = null;\n        }\n        if (consumerTransport.current) {\n            consumerTransport.current.close();\n            consumerTransport.current = null;\n        }\n\n        removeAllRemoteVideo();\n\n        disconnectSocket();\n        setIsSubscribed(false);\n    }\n\n    async function loadDevice(routerRtpCapabilities: any) {\n        try {\n            device.current = new Device();\n        } catch (error) {\n            if (error.name === 'UnsupportedError') {\n                console.error('browser not supported');\n            }\n        }\n        await device.current.load({ routerRtpCapabilities });\n    }\n\n    async function consume(transport: any, trackKind: any) {\n        console.log('--start of consume --kind=' + trackKind);\n        const { rtpCapabilities } = device.current;\n        //const data = await socket.request('consume', { rtpCapabilities });\n        const data = await sendRequest('consume', {\n            rtpCapabilities: rtpCapabilities,\n            kind: trackKind,\n        }).catch((err) => {\n            console.error('consume ERROR:', err);\n        });\n        const { producerId, id, kind, rtpParameters }: any = data;\n\n        if (producerId) {\n            let codecOptions = {};\n            const consumer = await transport.consume({\n                id,\n                producerId,\n                kind,\n                rtpParameters,\n                codecOptions,\n            });\n            //const stream = new MediaStream();\n            //stream.addTrack(consumer.track);\n\n            addRemoteTrack(clientId.current, consumer.track);\n\n            console.log('--end of consume');\n            //return stream;\n\n            return consumer;\n        } else {\n            console.warn('--- remote producer NOT READY');\n\n            return null;\n        }\n    }\n\n    function sendRequest(type: any, data: any) {\n        return new Promise((resolve: any, reject: any) => {\n            socketRef.current.emit(type, data, (err: any, response: any) => {\n                if (!err) {\n                    // Success response, so pass the mediasoup response to the local Room.\n                    resolve(response);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    function disconnectSocket() {\n        if (socketRef.current) {\n            socketRef.current.close();\n            socketRef.current = null;\n            clientId.current = null;\n            console.log('socket.io closed..');\n        }\n    }\n\n    const connectSocket: any = () => {\n        if (socketRef.current == null) {\n            const io: any = socketIOClient(\n                config.SERVER_ENDPOINT + '/video-broadcast'\n            );\n            socketRef.current = io;\n        }\n\n        return new Promise((resolve: any, reject: any) => {\n            const socket = socketRef.current;\n            socket.on('connect', function (evt: any) {\n                console.log('socket.io connected()');\n            });\n            socket.on('error', function (err: any) {\n                console.error('socket.io ERROR:', err);\n                reject(err);\n            });\n            socket.on('message', function (message: any) {\n                console.log('socket.io message:', message);\n                if (message.type === 'welcome') {\n                    if (socket.id !== message.id) {\n                        console.warn(\n                            'WARN: something wrong with clientID',\n                            socket.io,\n                            message.id\n                        );\n                    }\n\n                    clientId.current = message.id;\n                    console.log(\n                        'connected to server. clientId=' + clientId.current\n                    );\n                    resolve();\n                } else {\n                    console.error('UNKNOWN message from server:', message);\n                }\n            });\n            socket.on('newProducer', async function (message: any) {\n                console.log('socket.io newProducer:', message);\n                if (consumerTransport.current) {\n                    // start consume\n                    if (message.kind === 'video') {\n                        videoConsumer.current = await consumeAndResume(\n                            consumerTransport.current,\n                            message.kind\n                        );\n                    } else if (message.kind === 'audio') {\n                        audioConsumer.current = await consumeAndResume(\n                            consumerTransport.current,\n                            message.kind\n                        );\n                    }\n                }\n            });\n\n            socket.on('producerClosed', function (message: any) {\n                console.log('socket.io producerClosed:', message);\n                const localId = message.localId;\n                const remoteId = message.remoteId;\n                const kind = message.kind;\n                console.log(\n                    '--try removeConsumer remoteId=' +\n                        remoteId +\n                        ', localId=' +\n                        localId +\n                        ', kind=' +\n                        kind\n                );\n                if (kind === 'video') {\n                    if (videoConsumer.current) {\n                        videoConsumer.current.close();\n                        videoConsumer.current = null;\n                    }\n                } else if (kind === 'audio') {\n                    if (audioConsumer.current) {\n                        audioConsumer.current.close();\n                        audioConsumer.current = null;\n                    }\n                }\n\n                if (remoteId) {\n                    removeRemoteVideo(remoteId);\n                } else {\n                    removeAllRemoteVideo();\n                }\n            });\n        });\n    };\n\n    function removeRemoteVideo(id: any) {\n        console.log(' ---- removeRemoteVideo() id=' + id);\n    }\n\n    function removeAllRemoteVideo() {\n        // remoteVideo.current = null;\n        if (remoteVideo.current) {\n            remoteVideo.current.pause();\n            remoteVideo.current.srcObject = null;\n        }\n    }\n\n    return (\n        <div>\n            <button disabled={isSubscribed} onClick={handleSubscribe}>\n                Subscribe\n            </button>\n            <button disabled={!isSubscribed} onClick={handleDisconnect}>\n                Disconnect\n            </button>\n\n            <div>\n                remote video\n                <br />\n                <div>\n                    <video\n                        ref={remoteVideo}\n                        autoPlay\n                        style={{\n                            width: '240px',\n                            height: '180px',\n                            border: '1px solid black',\n                        }}\n                    ></video>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Subscribe;\n","import React, { Suspense, lazy } from 'react';\nimport { Device } from 'mediasoup-client';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\nfunction Publish(props: any) {\n    const localVideo: any = React.useRef();\n    const localStream: any = React.useRef();\n    const clientId: any = React.useRef();\n    const device: any = React.useRef();\n    const producerTransport: any = React.useRef();\n    const videoProducer: any = React.useRef();\n    const audioProducer: any = React.useRef();\n    const socketRef: any = React.useRef();\n\n    const [useVideo, setUseVideo] = React.useState(true);\n    const [useAudio, setUseAudio] = React.useState(true);\n    const [isStartMedia, setIsStartMedia] = React.useState(false);\n    const [isPublished, setIsPublished] = React.useState(false);\n\n    // ============ UI button ==========\n    const handleUseVideo = (e: any) => {\n        setUseVideo(!useVideo);\n    };\n    const handleUseAudio = (e: any) => {\n        setUseAudio(!useAudio);\n    };\n\n    const handleStartMedia = () => {\n        if (localStream.current) {\n            console.warn('WARN: local media ALREADY started');\n            return;\n        }\n\n        navigator.mediaDevices\n            .getUserMedia({ audio: useAudio, video: useVideo })\n            .then((stream: any) => {\n                localStream.current = stream;\n                playVideo(localVideo.current, localStream.current);\n                setIsStartMedia(true);\n            })\n            .catch((err) => {\n                console.error('media ERROR:', err);\n            });\n    };\n\n    function playVideo(element: any, stream: any) {\n        if (element.srcObject) {\n            console.warn('element ALREADY playing, so ignore');\n            return;\n        }\n        element.srcObject = stream;\n        element.volume = 0;\n        return element.play();\n    }\n\n    function pauseVideo(element: any) {\n        element.pause();\n        element.srcObject = null;\n    }\n\n    function stopLocalStream(stream: any) {\n        let tracks = stream.getTracks();\n        if (!tracks) {\n            console.warn('NO tracks');\n            return;\n        }\n\n        tracks.forEach((track: any) => track.stop());\n    }\n\n    function handleStopMedia() {\n        if (localStream.current) {\n            pauseVideo(localVideo.current);\n            stopLocalStream(localStream.current);\n            localStream.current = null;\n            setIsStartMedia(false);\n        }\n    }\n\n    async function handlePublish() {\n        if (!localStream.current) {\n            console.warn('WARN: local media NOT READY');\n            return;\n        }\n\n        // --- connect socket.io ---\n        if (!socketRef.current) {\n            await connectSocket().catch((err: any) => {\n                console.error(err);\n                return;\n            });\n        }\n        // --- get capabilities --\n        const data = await sendRequest('getRouterRtpCapabilities', {});\n        console.log('getRouterRtpCapabilities:', data);\n        await loadDevice(data);\n        //  }\n\n        // --- get transport info ---\n        console.log('--- createProducerTransport --');\n        const params = await sendRequest('createProducerTransport', {});\n        console.log('transport params:', params);\n        producerTransport.current = device.current.createSendTransport(params);\n        console.log('createSendTransport:', producerTransport);\n\n        // --- join & start publish --\n        producerTransport.current.on(\n            'connect',\n            async ({ dtlsParameters }: any, callback: any, errback: any) => {\n                console.log('--trasnport connect');\n                sendRequest('connectProducerTransport', {\n                    dtlsParameters: dtlsParameters,\n                })\n                    .then(callback)\n                    .catch(errback);\n            }\n        );\n\n        producerTransport.current.on(\n            'produce',\n            async (\n                { kind, rtpParameters }: any,\n                callback: any,\n                errback: any\n            ) => {\n                console.log('--trasnport produce');\n                try {\n                    const { id }: any = await sendRequest('produce', {\n                        transportId: producerTransport.current.id,\n                        kind,\n                        rtpParameters,\n                    });\n                    callback({ id });\n                } catch (err) {\n                    errback(err);\n                }\n            }\n        );\n\n        producerTransport.current.on('connectionstatechange', (state: any) => {\n            switch (state) {\n                case 'connecting':\n                    console.log('publishing...');\n                    break;\n\n                case 'connected':\n                    console.log('published');\n                    setIsPublished(true);\n                    break;\n\n                case 'failed':\n                    console.log('failed');\n                    producerTransport.current.close();\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        if (useVideo) {\n            const videoTrack = localStream.current.getVideoTracks()[0];\n            if (videoTrack) {\n                const trackParams = { track: videoTrack };\n                videoProducer.current = await producerTransport.current.produce(\n                    trackParams\n                );\n            }\n        }\n        if (useAudio) {\n            const audioTrack = localStream.current.getAudioTracks()[0];\n            if (audioTrack) {\n                const trackParams = { track: audioTrack };\n                audioProducer.current = await producerTransport.current.produce(\n                    trackParams\n                );\n            }\n        }\n    }\n\n    function handleDisconnect() {\n        if (localStream.current) {\n            pauseVideo(localVideo.current);\n            stopLocalStream(localStream.current);\n            localStream.current = null;\n        }\n        if (videoProducer.current) {\n            videoProducer.current.close(); // localStream will stop\n            videoProducer.current = null;\n        }\n        if (audioProducer.current) {\n            audioProducer.current.close(); // localStream will stop\n            audioProducer.current = null;\n        }\n        if (producerTransport.current) {\n            producerTransport.current.close(); // localStream will stop\n            producerTransport.current = null;\n        }\n\n        disconnectSocket();\n        setIsPublished(false);\n        setIsStartMedia(false);\n    }\n\n    const loadDevice = async (routerRtpCapabilities: any) => {\n        try {\n            device.current = new Device();\n            console.log('device.current');\n            console.log(device.current);\n        } catch (error) {\n            if (error.name === 'UnsupportedError') {\n                console.error('browser not supported');\n            }\n        }\n\n        console.log('device.current start');\n        console.log(device.current);\n        console.log('device.current end');\n        await device.current.load({ routerRtpCapabilities });\n    };\n\n    function disconnectSocket() {\n        if (socketRef.current) {\n            socketRef.current.close();\n            socketRef.current = null;\n            clientId.current = null;\n            console.log('socket.io closed..');\n        }\n    }\n\n    function sendRequest(type: any, data: any) {\n        return new Promise((resolve, reject) => {\n            socketRef.current.emit(type, data, (err: any, response: any) => {\n                if (!err) {\n                    // Success response, so pass the mediasoup response to the local Room.\n                    resolve(response);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    const connectSocket: any = () => {\n        if (socketRef.current == null) {\n            const io: any = socketIOClient(\n                config.SERVER_ENDPOINT + '/video-broadcast'\n            );\n            socketRef.current = io;\n        }\n\n        return new Promise((resolve: any, reject: any) => {\n            const socket = socketRef.current;\n            socket.on('connect', function (evt: any) {\n                console.log('socket.io connected()');\n            });\n            socket.on('error', function (err: any) {\n                console.error('socket.io ERROR:', err);\n                reject(err);\n            });\n            socket.on('message', function (message: any) {\n                console.log('socket.io message:', message);\n                if (message.type === 'welcome') {\n                    if (socket.id !== message.id) {\n                        console.warn(\n                            'WARN: something wrong with clientID',\n                            socket.io,\n                            message.id\n                        );\n                    }\n\n                    clientId.current = message.id;\n                    console.log(\n                        'connected to server. clientId=' + clientId.current\n                    );\n                    resolve();\n                } else {\n                    console.error('UNKNOWN message from server:', message);\n                }\n            });\n            socket.on('newProducer', async function (message: any) {\n                console.warn('IGNORE socket.io newProducer:', message);\n            });\n        });\n    };\n\n    return (\n        <div>\n            <div>\n                <input\n                    disabled={isStartMedia}\n                    onChange={handleUseVideo}\n                    type='checkbox'\n                    checked={useVideo}\n                ></input>\n                <label>video</label>\n            </div>\n            <div>\n                <input\n                    disabled={isStartMedia}\n                    onChange={handleUseAudio}\n                    type='checkbox'\n                    checked={useAudio}\n                ></input>\n                <label>audio</label>\n            </div>\n            <button disabled={isStartMedia} onClick={handleStartMedia}>\n                Start Media\n            </button>\n            <button\n                disabled={!isStartMedia || isPublished}\n                onClick={handleStopMedia}\n            >\n                Stop Media\n            </button>\n\n            <button\n                disabled={isPublished || !isStartMedia}\n                onClick={handlePublish}\n            >\n                publish\n            </button>\n            <button\n                disabled={!isPublished || !isStartMedia}\n                onClick={handleDisconnect}\n            >\n                Disconnect\n            </button>\n            <div>\n                local video\n                <video\n                    ref={localVideo}\n                    autoPlay\n                    style={{\n                        width: '240px',\n                        height: '180px',\n                        border: '1px solid black',\n                    }}\n                ></video>\n            </div>\n        </div>\n    );\n}\n\nexport default Publish;\n","import Layout from '../../CONTAINER/layout';\nimport Subscribe from './subscribe';\nimport Publish from './publish';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\n\n// const userSocket: any = socketIOClient(\n//     config.SERVER_ENDPOINT + '/video-broadcast'\n// );\n\nfunction Home(props: any) {\n    const view = props.match.params.view;\n    return (\n        <Layout>\n            {view === 'publish' ? (\n                <Publish\n                //  userSocket={userSocket}\n                />\n            ) : null}\n            {view === 'subscribe' ? (\n                <Subscribe\n                //  userSocket={userSocket}\n                />\n            ) : null}\n        </Layout>\n    );\n}\n\nexport default Home;\n"],"sourceRoot":""}