{"version":3,"sources":["app.config.js","CONTAINER/layout.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","PAGE/video-conference/room.tsx","PAGE/video-conference/index.tsx"],"names":["config","SERVER_ENDPOINT","APP_ENDPOINT","Layout","props","React","useEffect","socketIOClient","className","children","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MODE_STREAM","MODE_SHARE_SCREEN","CreateRemoteVideos","remoteVideo","useRef","useState","enableVideoStream","setEnableVideoStream","enableAudioStream","setEnableAudioStream","handleEnableVideoStream","stream","cond","getVideoTracks","enabled","handleEnableAudioStream","getAudioTracks","console","log","playVideo","current","peer","then","volume","catch","err","error","ref","autoPlay","style","width","height","border","mode","onClick","MemoizedCreateRemoteVideos","memo","MeetRoom","localScreen","localStreamScreen","localVideo","localStream","clientId","device","producerTransport","videoProducer","audioProducer","consumerTransport","videoConsumers","audioConsumers","consumersStream","socketRef","useVideo","setUseVideo","useAudio","setUseAudio","isStartMedia","setIsStartMedia","isConnected","setIsConnected","remoteVideos","setRemoteVideos","isShareScreen","setIsShareScreen","roomName","setRoomName","a","warn","sendRequest","data","loadDevice","params","createSendTransport","on","callback","errback","dtlsParameters","kind","rtpParameters","transportId","id","subscribe","state","close","videoTrack","trackParams","track","produce","audioTrack","handleStopScreenShare","pauseVideo","stopLocalStream","handleDisconnectScreenShare","producer","handleStopMedia","handleDisconnect","key2","peers","element","srcObject","play","pause","tracks","getTracks","stop","addRemoteTrack","undefined","newStream","MediaStream","addTrack","socket_id","removeRemoteVideo","consumeAdd","transport","remoteSocketId","prdId","trackKind","rtpCapabilities","remoteId","producerId","codecOptions","consume","consumer","addConsumer","removeConsumer","Promise","resolve","reject","connectSocket","createRecvTransport","consumeCurrentProducers","routerRtpCapabilities","Device","name","load","type","emit","response","localId","remoteInfo","remoteVideoIds","remoteAudioIds","consumeAll","remotAudioIds","rId","resp","io","socket","evt","roomId","message","socketId","disabled","onChange","e","checked","navigator","mediaDevices","getUserMedia","audio","video","placeholder","trim","getDisplayMedia","handleConnectScreenShare","onended","marginTop","display","justifyContent","map","index","index2","Home","match","view"],"mappings":"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","file":"static/js/6.044f1e5a.chunk.js","sourcesContent":["export const config = {\n    SERVER_ENDPOINT: 'localhost:5005',\n    APP_ENDPOINT: 'localhost:5001',\n};\n","import React, { useRef } from 'react';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { isPropertySignature } from 'typescript';\nimport { config } from '../app.config';\n\nfunction Layout(props: any) {\n    React.useEffect(() => {\n        const userSocket: any = socketIOClient(config.SERVER_ENDPOINT);\n    }, []);\n    return <div className='Layout'>{props.children}</div>;\n}\n\nexport default Layout;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { Suspense, lazy } from 'react';\nimport { Device } from 'mediasoup-client';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\n\nconst MODE_STREAM = 'stream';\nconst MODE_SHARE_SCREEN = 'share_screen';\n\nconst CreateRemoteVideos = (props: any) => {\n  const remoteVideo: any = React.useRef();\n\n  // ============ STREAMING CONTROL START ==========\n  const [enableVideoStream, setEnableVideoStream] = React.useState(true);\n  const [enableAudioStream, setEnableAudioStream] = React.useState(true);\n\n  const handleEnableVideoStream = (stream: any, cond: boolean) => {\n    if (!stream) {\n      return false;\n    }\n    stream.getVideoTracks()[0].enabled = cond;\n    setEnableVideoStream(cond);\n  };\n  const handleEnableAudioStream = (stream: any, cond: boolean) => {\n    if (!stream) {\n      return false;\n    }\n    stream.getAudioTracks()[0].enabled = cond;\n    setEnableAudioStream(cond);\n  };\n  // ============ STREAMING CONTROL END ==========\n\n  React.useEffect(() => {\n    // if (remoteVideo.current.srcObject) {\n    //     remoteVideo.current.srcObject.addTrack(props.track);\n    //         return;\n    //     }\n    console.log('CreateRemoteVideos');\n    console.log(props);\n    props\n      .playVideo(remoteVideo.current, props.peer.stream)\n      ?.then(() => {\n        remoteVideo.current.volume = 1;\n        console.log('remoteVideo.current');\n        console.log(remoteVideo.current);\n      })\n      .catch((err: any) => {\n        console.error('media ERROR:', err);\n      });\n  }, []);\n  return (\n    <div>\n      <div>\n        <video\n          ref={remoteVideo}\n          autoPlay\n          style={{\n            width: '360px',\n            height: '240px',\n            border: '1px solid black',\n          }}\n        ></video>\n      </div>\n\n      {props.mode == MODE_SHARE_SCREEN ? (\n        <div>\n          {!enableVideoStream ? (\n            <button\n              onClick={() => handleEnableVideoStream(props.peer.stream, true)}\n            >\n              Enable Video\n            </button>\n          ) : (\n            <button\n              onClick={() => handleEnableVideoStream(props.peer.stream, false)}\n            >\n              Disable Video\n            </button>\n          )}\n          {!enableAudioStream ? (\n            <button\n              onClick={() => handleEnableAudioStream(props.peer.stream, true)}\n            >\n              Enable Audio\n            </button>\n          ) : (\n            <button\n              onClick={() => handleEnableAudioStream(props.peer.stream, false)}\n            >\n              Disable Audio\n            </button>\n          )}\n        </div>\n      ) : null}\n    </div>\n  );\n};\nexport const MemoizedCreateRemoteVideos = React.memo(CreateRemoteVideos);\n\nfunction MeetRoom(props: any) {\n  const localScreen: any = React.useRef();\n  const localStreamScreen: any = React.useRef();\n\n  const localVideo: any = React.useRef();\n  const localStream: any = React.useRef();\n  const clientId: any = React.useRef();\n  const device: any = React.useRef();\n  const producerTransport: any = React.useRef();\n  const videoProducer: any = React.useRef({});\n  const audioProducer: any = React.useRef({});\n  const consumerTransport: any = React.useRef();\n  const videoConsumers: any = React.useRef({});\n  const audioConsumers: any = React.useRef({});\n  const consumersStream: any = React.useRef({});\n  const socketRef: any = React.useRef();\n\n  const [useVideo, setUseVideo] = React.useState(true);\n  const [useAudio, setUseAudio] = React.useState(true);\n  const [isStartMedia, setIsStartMedia] = React.useState(false);\n  const [isConnected, setIsConnected] = React.useState(false);\n  const [remoteVideos, setRemoteVideos]: any = React.useState({});\n  const [isShareScreen, setIsShareScreen] = React.useState(false);\n  const [roomName, setRoomName]: any = React.useState('');\n\n  // ============ STREAMING CONTROL START ==========\n  const [enableVideoStream, setEnableVideoStream] = React.useState(useVideo);\n  const [enableAudioStream, setEnableAudioStream] = React.useState(useAudio);\n\n  const [enableVideoShare, setEnableVideoShare] = React.useState(useVideo);\n  const [enableAudioShare, setEnableAudioShare] = React.useState(useAudio);\n\n  const handleEnableVideoStream = (stream: any, cond: boolean) => {\n    if (!stream) {\n      return false;\n    }\n    stream.getVideoTracks()[0].enabled = cond;\n    setEnableVideoStream(cond);\n  };\n  const handleEnableAudioStream = (stream: any, cond: boolean) => {\n    if (!stream) {\n      return false;\n    }\n    stream.getAudioTracks()[0].enabled = cond;\n    setEnableAudioStream(cond);\n  };\n  const handleEnableVideoShare = (stream: any, cond: boolean) => {\n    if (!stream) {\n      return false;\n    }\n    stream.getVideoTracks()[0].enabled = cond;\n    setEnableVideoShare(cond);\n  };\n  const handleEnableAudioShare = (stream: any, cond: boolean) => {\n    if (!stream) {\n      return false;\n    }\n    stream.getAudioTracks()[0].enabled = cond;\n    setEnableAudioShare(cond);\n  };\n\n  // ============STREAMING CONTROL END ==========\n  // ============ ROOM START ==========\n\n  const handleRoomName = (e: any) => {\n    setRoomName(e.target.value);\n  };\n  // ============ ROOM END ==========\n\n  // ============ SHARE SCREEN START ==========\n  const handleStartScreenShare = () => {\n    if (localStreamScreen.current) {\n      console.warn('WARN: local media ALREADY started');\n      return;\n    }\n\n    const mediaDevices: any = navigator.mediaDevices;\n    mediaDevices\n      .getDisplayMedia({ audio: useAudio, video: useVideo })\n      .then((stream: any) => {\n        localStreamScreen.current = stream;\n\n        playVideo(localScreen.current, localStreamScreen.current);\n        handleConnectScreenShare();\n        setIsShareScreen(true);\n        const screenTrack = stream.getTracks()[0];\n        screenTrack.onended = function () {\n          handleDisconnectScreenShare();\n        };\n      })\n      .catch((err: any) => {\n        console.error('media ERROR:', err);\n      });\n  };\n\n  async function handleConnectScreenShare() {\n    if (!localStreamScreen.current) {\n      console.warn('WARN: local media NOT READY');\n      return;\n    }\n\n    // // --- connect socket.io ---\n    // await connectSocket().catch((err: any) => {\n    //     console.error(err);\n    //     return;\n    // });\n\n    // console.log('connected');\n\n    // --- get capabilities --\n    const data = await sendRequest('getRouterRtpCapabilities', {});\n    console.log('getRouterRtpCapabilities:', data);\n    await loadDevice(data);\n\n    // --- get transport info ---\n    console.log('--- createProducerTransport --');\n    const params = await sendRequest('createProducerTransport', {\n      mode: MODE_SHARE_SCREEN,\n    });\n    console.log('transport params:', params);\n    producerTransport.current = device.current.createSendTransport(params);\n    console.log('createSendTransport:', producerTransport.current);\n\n    // --- join & start publish --\n    producerTransport.current.on(\n      'connect',\n      async ({ dtlsParameters }: any, callback: any, errback: any) => {\n        console.log('--trasnport connect');\n        sendRequest('connectProducerTransport', {\n          dtlsParameters: dtlsParameters,\n        })\n          .then(callback)\n          .catch(errback);\n      }\n    );\n\n    producerTransport.current.on(\n      'produce',\n      async ({ kind, rtpParameters }: any, callback: any, errback: any) => {\n        console.log('--trasnport produce');\n        try {\n          const { id }: any = await sendRequest('produce', {\n            transportId: producerTransport.current.id,\n            kind,\n            rtpParameters,\n            mode: MODE_SHARE_SCREEN,\n          });\n          callback({ id });\n          console.log('--produce requested, then subscribe ---');\n          subscribe();\n        } catch (err) {\n          errback(err);\n        }\n      }\n    );\n\n    producerTransport.current.on('connectionstatechange', (state: any) => {\n      switch (state) {\n        case 'connecting':\n          console.log('publishing...');\n          break;\n\n        case 'connected':\n          console.log('published');\n          //  setIsConnected(true);\n          break;\n\n        case 'failed':\n          console.log('failed');\n          producerTransport.current.close();\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (useVideo) {\n      const videoTrack = localStreamScreen.current.getVideoTracks()[0];\n      if (videoTrack) {\n        const trackParams = { track: videoTrack };\n        videoProducer.current[\n          MODE_SHARE_SCREEN\n        ] = await producerTransport.current.produce(trackParams);\n      }\n    }\n    if (useAudio) {\n      const audioTrack = localStreamScreen.current.getAudioTracks()[0];\n      if (audioTrack) {\n        const trackParams = { track: audioTrack };\n        audioProducer.current[\n          MODE_SHARE_SCREEN\n        ] = await producerTransport.current.produce(trackParams);\n      }\n    }\n  }\n\n  function handleStopScreenShare() {\n    if (localStreamScreen.current) {\n      pauseVideo(localScreen.current);\n      stopLocalStream(localStreamScreen.current);\n      localStreamScreen.current = null;\n      setIsShareScreen(false);\n    }\n  }\n  async function handleDisconnectScreenShare() {\n    handleStopScreenShare();\n    {\n      const producer = videoProducer.current[MODE_SHARE_SCREEN];\n      producer?.close();\n      delete videoProducer.current[MODE_SHARE_SCREEN];\n    }\n    {\n      const producer = audioProducer.current[MODE_SHARE_SCREEN];\n      producer?.close();\n      delete audioProducer.current[MODE_SHARE_SCREEN];\n    }\n\n    await sendRequest('producerStopShareScreen', {});\n  }\n\n  // ============ SHARE SCREEN END ==========\n\n  // ============ MEDIA START ==========\n\n  const handleUseVideo = (e: any) => {\n    setUseVideo(!useVideo);\n  };\n  const handleUseAudio = (e: any) => {\n    setUseAudio(!useAudio);\n  };\n\n  const handleStartMedia = () => {\n    if (localStream.current) {\n      console.warn('WARN: local media ALREADY started');\n      return;\n    }\n\n    navigator.mediaDevices\n      .getUserMedia({ audio: useAudio, video: useVideo })\n      .then((stream: any) => {\n        localStream.current = stream;\n        playVideo(localVideo.current, localStream.current);\n        setIsStartMedia(true);\n      })\n      .catch((err: any) => {\n        console.error('media ERROR:', err);\n      });\n  };\n\n  function handleStopMedia() {\n    if (localStream.current) {\n      pauseVideo(localVideo.current);\n      stopLocalStream(localStream.current);\n      localStream.current = null;\n      setIsStartMedia(false);\n    }\n  }\n\n  function handleDisconnect() {\n    handleStopMedia();\n    handleStopScreenShare();\n    // if (videoProducer.current) {\n    //     videoProducer.current.close(); // localStream will stop\n    //     videoProducer.current = null;\n    // }\n    {\n      for (const mode in videoProducer.current) {\n        const producer = videoProducer.current[mode];\n        producer?.close();\n        delete videoProducer.current[mode];\n      }\n    }\n    {\n      for (const mode in audioProducer.current) {\n        const producer = audioProducer.current[mode];\n        producer?.close();\n        delete audioProducer.current[mode];\n      }\n    }\n    // if (audioProducer.current) {\n    //     audioProducer.current.close(); // localStream will stop\n    //     audioProducer.current = null;\n    // }\n    if (producerTransport.current) {\n      producerTransport.current.close(); // localStream will stop\n      producerTransport.current = null;\n    }\n\n    for (const key in videoConsumers.current) {\n      for (const key2 in videoConsumers.current[key]) {\n        const consumer = videoConsumers.current[key][key2];\n        consumer.close();\n        delete videoConsumers.current[key][key2];\n      }\n    }\n    for (const key in audioConsumers.current) {\n      for (const key2 in audioConsumers.current[key]) {\n        const consumer = audioConsumers.current[key][key2];\n        consumer.close();\n        delete audioConsumers.current[key][key2];\n      }\n    }\n\n    if (consumersStream.current) {\n      consumersStream.current = {};\n    }\n\n    if (consumerTransport.current) {\n      consumerTransport.current.close();\n      consumerTransport.current = null;\n    }\n\n    removeAllRemoteVideo();\n\n    disconnectSocket();\n    setIsConnected(false);\n  }\n\n  function playVideo(element: any, stream: any) {\n    if (element.srcObject) {\n      console.warn('element ALREADY playing, so ignore');\n      return;\n    }\n    element.srcObject = stream;\n    element.volume = 0;\n    return element.play();\n  }\n\n  function pauseVideo(element: any) {\n    element.pause();\n    element.srcObject = null;\n  }\n\n  function stopLocalStream(stream: any) {\n    let tracks = stream.getTracks();\n    if (!tracks) {\n      console.warn('NO tracks');\n      return;\n    }\n\n    tracks.forEach((track: any) => track.stop());\n  }\n\n  function addRemoteTrack(id: any, track: any, mode: string) {\n    // let video: any = findRemoteVideo(id);\n    // if (!video) {\n    //     video = addRemoteVideo(id);\n    //     video.controls = '1';\n    // }\n\n    // if (video.srcObject) {\n    //     video.srcObject.addTrack(track);\n    //     return;\n    // }\n\n    if (id === clientId.current) {\n      return false;\n    }\n\n    console.log('addremotetrack');\n    console.log(track);\n\n    if (consumersStream.current[id] == undefined) {\n      consumersStream.current[id] = {};\n    }\n\n    if (consumersStream.current[id][mode] == undefined) {\n      const newStream = new MediaStream();\n      newStream.addTrack(track);\n      consumersStream.current[id][mode] = {\n        stream: newStream,\n        socket_id: id,\n      };\n    } else {\n      //add audiotrack\n      consumersStream.current[id][mode].stream.addTrack(track);\n    }\n\n    setRemoteVideos((peers: any) => {\n      const newPeers: any = peers;\n\n      return { ...consumersStream.current };\n    });\n\n    // setRemoteVideos((peers: any) => {\n    //     const newPeers: any = peers;\n    //     if (newPeers[id] == undefined) {\n    //         newPeers[id] = {};\n    //     }\n    //     newPeers[id][mode] = {\n    //         stream: newStream,\n    //         socket_id: id,\n    //     };\n    //     return { ...peers, ...newPeers };\n    // });\n    // setShouldLoadConsumerShareScreen\n\n    // playVideo(video, newStream)\n    //     .then(() => {\n    //         video.volume = 1.0;\n    //     })\n    //     .catch((err: any) => {\n    //         console.error('media ERROR:', err);\n    //     });\n  }\n\n  function addRemoteVideo(id: any) {\n    let existElement = findRemoteVideo(id);\n    if (existElement) {\n      console.warn('remoteVideo element ALREADY exist for id=' + id);\n      return existElement;\n    }\n\n    let element = document.createElement('video');\n    return element;\n  }\n\n  function findRemoteVideo(id: any) {\n    let element = remoteVideos.current[id];\n    return element;\n  }\n\n  // function removeRemoteVideoByMode(id: any, mode: string) {\n  //     console.log(' ---- removeRemoteVideo() id=' + id);\n  //     delete consumersStream.current[id][mode];\n  //     setRemoteVideos((peers: any) => {\n  //         const newPeers: any = peers;\n  //         delete newPeers[id][mode];\n\n  //         return { ...peers, ...newPeers };\n  //     });\n  // }\n\n  function removeRemoteVideo(id: any, mode: string) {\n    console.log(' ---- removeRemoteVideo() id=' + id);\n    if (mode == MODE_STREAM) {\n      delete consumersStream.current[id];\n    } else {\n      delete consumersStream.current[id][mode];\n    }\n\n    setRemoteVideos((peers: any) => {\n      const newPeers: any = peers;\n      delete newPeers[id];\n\n      return { ...consumersStream.current };\n    });\n    // if (element) {\n    //     element.pause();\n    //     element.srcObject = null;\n    //     remoteContainer.removeChild(element);\n    // } else {\n    //     console.log('child element NOT FOUND');\n    // }\n  }\n\n  function removeAllRemoteVideo() {\n    console.log(' ---- removeAllRemoteVideo() id');\n    consumersStream.current = {};\n    setRemoteVideos((peers: any) => {\n      const newPeers = {};\n\n      return { ...newPeers };\n    });\n    // while (remoteContainer.firstChild) {\n    //     remoteContainer.firstChild.pause();\n    //     remoteContainer.firstChild.srcObject = null;\n    //     remoteContainer.removeChild(remoteContainer.firstChild);\n    // }\n  }\n\n  async function consumeAdd(\n    transport: any,\n    remoteSocketId: any,\n    prdId: any,\n    trackKind: any,\n    mode: any = MODE_STREAM\n  ) {\n    console.log('--start of consumeAdd -- kind=%s', trackKind);\n    const { rtpCapabilities } = device.current;\n    //const data = await socket.request('consume', { rtpCapabilities });\n    const data = await sendRequest('consumeAdd', {\n      rtpCapabilities: rtpCapabilities,\n      remoteId: remoteSocketId,\n      kind: trackKind,\n      mode: mode,\n    }).catch((err) => {\n      console.error('consumeAdd ERROR:', err);\n    });\n    const { producerId, id, kind, rtpParameters }: any = data;\n    if (prdId && prdId !== producerId) {\n      console.warn('producerID NOT MATCH');\n    }\n\n    let codecOptions = {};\n    const consumer = await transport.consume({\n      id,\n      producerId,\n      kind,\n      rtpParameters,\n      codecOptions,\n      mode,\n    });\n    //const stream = new MediaStream();\n    //stream.addTrack(consumer.track);\n\n    addConsumer(remoteSocketId, consumer, kind, mode);\n    consumer.remoteId = remoteSocketId;\n    consumer.on('transportclose', () => {\n      console.log('--consumer transport closed. remoteId=' + consumer.remoteId);\n      //consumer.close();\n      //removeConsumer(remoteId);\n      //removeRemoteVideo(consumer.remoteId);\n    });\n    consumer.on('producerclose', () => {\n      console.log('--consumer producer closed. remoteId=' + consumer.remoteId);\n      consumer.close();\n      removeConsumer(consumer.remoteId, kind, mode);\n      removeRemoteVideo(consumer.remoteId, mode);\n    });\n    consumer.on('trackended', () => {\n      console.log('--consumer trackended. remoteId=' + consumer.remoteId);\n      //consumer.close();\n      //removeConsumer(remoteId);\n      //removeRemoteVideo(consumer.remoteId);\n    });\n\n    console.log('--end of consumeAdd');\n    //return stream;\n\n    if (kind === 'video') {\n      console.log('--try resumeAdd --');\n      sendRequest('resumeAdd', {\n        remoteId: remoteSocketId,\n        kind: kind,\n        mode,\n      })\n        .then(() => {\n          console.log('resumeAdd OK');\n        })\n        .catch((err) => {\n          console.error('resumeAdd ERROR:', err);\n        });\n    }\n    return new Promise((resolve: any, reject: any) => {\n      addRemoteTrack(remoteSocketId, consumer.track, mode);\n      resolve();\n    });\n  }\n\n  async function handleConnect() {\n    if (!localStream.current) {\n      console.warn('WARN: local media NOT READY');\n      return;\n    }\n\n    // --- connect socket.io ---\n    await connectSocket().catch((err: any) => {\n      console.error(err);\n      return;\n    });\n\n    console.log('connected');\n\n    // --- get capabilities --\n    const data = await sendRequest('getRouterRtpCapabilities', {});\n    console.log('getRouterRtpCapabilities:', data);\n    await loadDevice(data);\n\n    // --- get transport info ---\n    console.log('--- createProducerTransport --');\n    const params = await sendRequest('createProducerTransport', {\n      mode: MODE_STREAM,\n    });\n    console.log('transport params:', params);\n    producerTransport.current = device.current.createSendTransport(params);\n    console.log('createSendTransport:', producerTransport.current);\n\n    // --- join & start publish --\n    producerTransport.current.on(\n      'connect',\n      async ({ dtlsParameters }: any, callback: any, errback: any) => {\n        console.log('--trasnport connect');\n        sendRequest('connectProducerTransport', {\n          dtlsParameters: dtlsParameters,\n        })\n          .then(callback)\n          .catch(errback);\n      }\n    );\n\n    producerTransport.current.on(\n      'produce',\n      async ({ kind, rtpParameters }: any, callback: any, errback: any) => {\n        console.log('--trasnport produce');\n        try {\n          const { id }: any = await sendRequest('produce', {\n            transportId: producerTransport.current.id,\n            kind,\n            rtpParameters,\n            mode: MODE_STREAM,\n          });\n          callback({ id });\n          console.log('--produce requested, then subscribe ---');\n          subscribe();\n        } catch (err) {\n          errback(err);\n        }\n      }\n    );\n\n    producerTransport.current.on('connectionstatechange', (state: any) => {\n      switch (state) {\n        case 'connecting':\n          console.log('publishing...');\n          break;\n\n        case 'connected':\n          console.log('published');\n          setIsConnected(true);\n          break;\n\n        case 'failed':\n          console.log('failed');\n          producerTransport.current.close();\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    if (useVideo) {\n      const videoTrack = localStream.current.getVideoTracks()[0];\n      if (videoTrack) {\n        const trackParams = { track: videoTrack };\n        videoProducer.current[\n          MODE_STREAM\n        ] = await producerTransport.current.produce(trackParams);\n      }\n    }\n    if (useAudio) {\n      const audioTrack = localStream.current.getAudioTracks()[0];\n      if (audioTrack) {\n        const trackParams = { track: audioTrack };\n        audioProducer.current[\n          MODE_STREAM\n        ] = await producerTransport.current.produce(trackParams);\n      }\n    }\n  }\n\n  async function subscribe() {\n    // console.log(socketRef.current);\n    if (!socketRef.current) {\n      await connectSocket().catch((err: any) => {\n        console.error(err);\n        return;\n      });\n    }\n\n    // --- get capabilities --\n    const data = await sendRequest('getRouterRtpCapabilities', {});\n    console.log('getRouterRtpCapabilities:', data);\n    await loadDevice(data);\n    //  }\n\n    // --- prepare transport ---\n    console.log('--- createConsumerTransport --');\n    if (!consumerTransport.current) {\n      const params = await sendRequest('createConsumerTransport', {});\n      console.log('transport params:', params);\n      consumerTransport.current = device.current.createRecvTransport(params);\n      console.log('createConsumerTransport:', consumerTransport.current);\n\n      // --- join & start publish --\n      consumerTransport.current.on(\n        'connect',\n        async ({ dtlsParameters }: any, callback: any, errback: any) => {\n          console.log('--consumer trasnport connect');\n          sendRequest('connectConsumerTransport', {\n            dtlsParameters: dtlsParameters,\n          })\n            .then(callback)\n            .catch(errback);\n        }\n      );\n\n      consumerTransport.current.on('connectionstatechange', (state: any) => {\n        switch (state) {\n          case 'connecting':\n            console.log('subscribing...');\n            break;\n\n          case 'connected':\n            console.log('subscribed');\n            //consumeCurrentProducers(clientId);\n            break;\n\n          case 'failed':\n            console.log('failed');\n            producerTransport.current.close();\n            break;\n\n          default:\n            break;\n        }\n      });\n\n      consumeCurrentProducers(clientId.current);\n    }\n  }\n\n  async function loadDevice(routerRtpCapabilities: any) {\n    try {\n      device.current = new Device();\n    } catch (error) {\n      if (error.name === 'UnsupportedError') {\n        console.error('browser not supported');\n      }\n    }\n    await device.current.load({ routerRtpCapabilities });\n  }\n\n  function sendRequest(type: any, data: any) {\n    return new Promise((resolve: any, reject: any) => {\n      socketRef.current.emit(type, data, (err: any, response: any) => {\n        if (!err) {\n          // Success response, so pass the mediasoup response to the local Room.\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  async function consumeCurrentProducers(clientId: any) {\n    console.log('-- try consuleAll() --');\n    const remoteInfo: any = await sendRequest('getCurrentProducers', {\n      localId: clientId.current,\n    }).catch((err) => {\n      console.error('getCurrentProducers ERROR:', err);\n      return;\n    });\n    //console.log('remoteInfo.producerIds:', remoteInfo.producerIds);\n    console.log('remoteInfo.remoteVideoIds:', remoteInfo.remoteVideoIds);\n    console.log('remoteInfo.remoteAudioIds:', remoteInfo.remoteAudioIds);\n    consumeAll(\n      consumerTransport.current,\n      remoteInfo.remoteVideoIds,\n      remoteInfo.remoteAudioIds\n    );\n  }\n\n  function consumeAll(transport: any, remoteVideoIds: any, remotAudioIds: any) {\n    console.log('----- consumeAll() -----');\n\n    remoteVideoIds.forEach((rId: any) => {\n      consumeAdd(transport, rId, null, 'video', MODE_STREAM).then(\n        (resp: any) => {\n          consumeAdd(transport, rId, null, 'video', MODE_SHARE_SCREEN);\n        }\n      );\n    });\n    let audioIdsCount = 0;\n    remotAudioIds.forEach((rId: any) => {\n      consumeAdd(transport, rId, null, 'audio', MODE_STREAM).then(\n        (resp: any) => {\n          consumeAdd(transport, rId, null, 'audio', MODE_SHARE_SCREEN);\n        }\n      );\n    });\n  }\n\n  function disconnectSocket() {\n    if (socketRef.current) {\n      socketRef.current.close();\n      socketRef.current = null;\n      clientId.current = null;\n      console.log('socket.io closed..');\n    }\n  }\n\n  function removeConsumer(id: any, kind: any, mode: string) {\n    if (mode == undefined) {\n      return false;\n    }\n    if (kind === 'video') {\n      if (mode == MODE_STREAM) {\n        delete videoConsumers.current[id];\n      } else {\n        delete videoConsumers.current[id][mode];\n      }\n\n      console.log(\n        'videoConsumers count=' + Object.keys(videoConsumers.current).length\n      );\n    } else if (kind === 'audio') {\n      if (mode == MODE_STREAM) {\n        delete audioConsumers.current[id];\n      } else {\n        delete audioConsumers.current[id][mode];\n      }\n\n      console.log(\n        'audioConsumers count=' + Object.keys(audioConsumers.current).length\n      );\n    } else {\n      console.warn('UNKNOWN consumer kind=' + kind);\n    }\n  }\n\n  // function getConsumer(id: any, kind: any) {\n  //     if (kind === 'video') {\n  //         return videoConsumers.current[id];\n  //     } else if (kind === 'audio') {\n  //         return audioConsumers.current[id];\n  //     } else {\n  //         console.warn('UNKNOWN consumer kind=' + kind);\n  //     }\n  // }\n\n  function addConsumer(id: any, consumer: any, kind: any, mode: any) {\n    if (id === clientId.current) {\n      return false;\n    }\n    if (kind === 'video') {\n      if (videoConsumers.current[id] == undefined) {\n        videoConsumers.current[id] = {};\n      }\n      videoConsumers.current[id][mode] = consumer;\n      console.log(\n        'videoConsumers count=' + Object.keys(videoConsumers.current).length\n      );\n    } else if (kind === 'audio') {\n      if (audioConsumers.current[id] == undefined) {\n        audioConsumers.current[id] = {};\n      }\n      audioConsumers.current[id][mode] = consumer;\n\n      console.log(\n        'audioConsumers count=' + Object.keys(audioConsumers.current).length\n      );\n    } else {\n      console.warn('UNKNOWN consumer kind=' + kind);\n    }\n  }\n\n  const connectSocket: any = () => {\n    if (socketRef.current == null) {\n      const io: any = socketIOClient(\n        config.SERVER_ENDPOINT + '/video-conference'\n      );\n      socketRef.current = io;\n    }\n\n    return new Promise((resolve: any, reject: any) => {\n      const socket = socketRef.current;\n\n      socket.on('connect', async function (evt: any) {\n        console.log('socket.io connected(). prepare room=%s', roomName);\n        await sendRequest('prepare_room', { roomId: roomName });\n      });\n      socket.on('error', function (err: any) {\n        console.error('socket.io ERROR:', err);\n        reject(err);\n      });\n      socket.on('message', function (message: any) {\n        console.log('socket.io message:', message);\n        if (message.type === 'welcome') {\n          if (socket.id !== message.id) {\n            console.warn(\n              'WARN: something wrong with clientID',\n              socket.io,\n              message.id\n            );\n          }\n\n          clientId.current = message.id;\n          console.log('connected to server. clientId=' + clientId.current);\n          resolve();\n        } else {\n          console.error('UNKNOWN message from server:', message);\n        }\n      });\n      socket.on('newProducer', function (message: any) {\n        console.log('socket.io newProducer:', message);\n        const remoteId = message.socketId;\n        const prdId = message.producerId;\n        const kind = message.kind;\n        const mode = message.mode;\n\n        if (kind === 'video') {\n          console.log(\n            '--try consumeAdd remoteId=' +\n              remoteId +\n              ', prdId=' +\n              prdId +\n              ', kind=' +\n              kind\n          );\n          consumeAdd(consumerTransport.current, remoteId, prdId, kind, mode);\n        } else if (kind === 'audio') {\n          //console.warn('-- audio NOT SUPPORTED YET. skip remoteId=' + remoteId + ', prdId=' + prdId + ', kind=' + kind);\n          console.log(\n            '--try consumeAdd remoteId=' +\n              remoteId +\n              ', prdId=' +\n              prdId +\n              ', kind=' +\n              kind\n          );\n          consumeAdd(consumerTransport.current, remoteId, prdId, kind, mode);\n        }\n      });\n\n      socket.on('producerClosed', function (message: any) {\n        console.log('socket.io producerClosed:', message);\n        const localId = message.localId;\n        const remoteId = message.remoteId;\n        const kind = message.kind;\n        const mode = message.mode;\n        console.log(\n          '--try removeConsumer remoteId=%s, localId=%s, track=%s',\n          remoteId,\n          localId,\n          kind\n        );\n        removeConsumer(remoteId, kind, mode);\n        removeRemoteVideo(remoteId, mode);\n      });\n      // socket.on('shareScreenClosed', function (payload: any) {\n      //     console.log('socket.io shareScreenClosed:', payload);\n      //     const callerID = payload.callerID;\n\n      //     removeConsumer(callerID, 'video', MODE_SHARE_SCREEN);\n      //     removeConsumer(callerID, 'audio', MODE_SHARE_SCREEN);\n      //     removeRemoteVideoByMode(callerID, MODE_SHARE_SCREEN);\n      // });\n    });\n  };\n\n  // ============ MEDIA END ==========\n\n  // ============ MEDIA CLEANUP BEFORE/AFTER START ==========\n  React.useEffect(() => {\n    return () => {\n      handleDisconnect();\n    };\n  }, []);\n  // ============ MEDIA CLEANUP BEFORE/AFTER END ==========\n\n  return (\n    <div>\n      <div>\n        <input\n          disabled={isStartMedia}\n          onChange={handleUseVideo}\n          type='checkbox'\n          checked={useVideo}\n        ></input>\n        <label>video</label>\n      </div>\n      <div>\n        <input\n          disabled={isStartMedia}\n          onChange={handleUseAudio}\n          type='checkbox'\n          checked={useAudio}\n        ></input>\n        <label>audio</label>\n      </div>\n\n      {!isStartMedia ? (\n        <button disabled={isStartMedia} onClick={handleStartMedia}>\n          Start Media\n        </button>\n      ) : (\n        <button\n          disabled={!isStartMedia || isConnected}\n          onClick={handleStopMedia}\n        >\n          Stop Media\n        </button>\n      )}\n      <input\n        type='text'\n        disabled={isConnected}\n        onChange={handleRoomName}\n        value={roomName}\n        placeholder='room name'\n      />\n      {!isConnected ? (\n        <button\n          disabled={isConnected || !isStartMedia || roomName.trim().length == 0}\n          onClick={handleConnect}\n        >\n          Connect\n        </button>\n      ) : (\n        <button\n          disabled={!isConnected || !isStartMedia}\n          onClick={handleDisconnect}\n        >\n          Disconnect\n        </button>\n      )}\n\n      {isShareScreen ? (\n        <button\n          disabled={!isStartMedia || !isConnected}\n          onClick={handleDisconnectScreenShare}\n        >\n          Stop Screen\n        </button>\n      ) : (\n        <button\n          disabled={!isStartMedia || !isConnected}\n          onClick={handleStartScreenShare}\n        >\n          Start Screen\n        </button>\n      )}\n\n      <div>\n        <div style={{ marginTop: '20px' }}>Local Video</div>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <div>\n            <div>\n              <video\n                ref={localVideo}\n                autoPlay\n                style={{\n                  width: '360px',\n                  height: '240px',\n                  border: '1px solid black',\n                }}\n              ></video>\n            </div>\n            {isStartMedia ? (\n              <div>\n                {!enableVideoStream ? (\n                  <button\n                    onClick={() =>\n                      handleEnableVideoStream(localStream.current, true)\n                    }\n                  >\n                    Enable Video\n                  </button>\n                ) : (\n                  <button\n                    onClick={() =>\n                      handleEnableVideoStream(localStream.current, false)\n                    }\n                  >\n                    Disable Video\n                  </button>\n                )}\n                {!enableAudioStream ? (\n                  <button\n                    onClick={() =>\n                      handleEnableAudioStream(localStream.current, true)\n                    }\n                  >\n                    Enable Audio\n                  </button>\n                ) : (\n                  <button\n                    onClick={() =>\n                      handleEnableAudioStream(localStream.current, false)\n                    }\n                  >\n                    Disable Audio\n                  </button>\n                )}\n              </div>\n            ) : null}\n          </div>\n          <div style={{ display: isShareScreen ? 'block' : 'none' }}>\n            <div>\n              <video\n                ref={localScreen}\n                autoPlay\n                style={{\n                  width: '360px',\n                  height: '240px',\n                  border: '1px solid black',\n                }}\n              ></video>\n            </div>\n            {/* {isStartMedia && isShareScreen ? (\n              <div>\n                {!enableVideoShare ? (\n                  <button\n                    onClick={() =>\n                      handleEnableVideoShare(localStream.current, true)\n                    }\n                  >\n                    Enable Video\n                  </button>\n                ) : (\n                  <button\n                    onClick={() =>\n                      handleEnableVideoShare(localStream.current, false)\n                    }\n                  >\n                    Disable Video\n                  </button>\n                )}\n                {!enableAudioShare ? (\n                  <button\n                    onClick={() =>\n                      handleEnableAudioShare(localStream.current, true)\n                    }\n                  >\n                    Enable Audio\n                  </button>\n                ) : (\n                  <button\n                    onClick={() =>\n                      handleEnableAudioShare(localStream.current, false)\n                    }\n                  >\n                    Disable Audio\n                  </button>\n                )}\n              </div>\n            ) : null} */}\n          </div>\n        </div>\n      </div>\n      <div style={{ marginTop: '20px' }}>Remote Videos</div>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {console.log(remoteVideos)}\n        {Object.keys(remoteVideos).map((key: any, index: number) => {\n          return Object.keys(remoteVideos[key]).map(\n            (key2: any, index2: number) => {\n              const peer: any = remoteVideos[key][key2];\n\n              return (\n                <MemoizedCreateRemoteVideos\n                  mode={key2}\n                  key={peer.socket_id + '__' + key2}\n                  peer={peer}\n                  playVideo={playVideo}\n                />\n              );\n            }\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default MeetRoom;\n","import Layout from '../../CONTAINER/layout';\n\nimport MeetRoom from './room';\nimport { io as socketIOClient } from 'socket.io-client';\nimport { config } from '../../app.config';\n\n// const socketIO: any = socketIOClient(\n//     config.SERVER_ENDPOINT + '/video-conference'\n// );\n\nfunction Home(props: any) {\n    const view = props.match.params.view;\n    return (\n        <Layout>\n            <MeetRoom\n            //  io={socketIO}\n            />\n        </Layout>\n    );\n}\n\nexport default Home;\n"],"sourceRoot":""}